with Commodities;
with Localisation;
with Factions;
with Managed;
with Names;
with Owners;
with Technology;
with Transport;
with Worlds;

package Ships is

record Ship_Design : Has_Name is
   Hold_Size       : Quantity_Type;
   Default_Manager : String (32);
end Ship_Design;

record Ship : Has_Name, Has_Owner, Managed, Agent is
   key Faction;
   key World;
   key Star_System;
   Orbit             : Long_Float;
   Inclination       : Long_Float;
   Epoch             : Time;
   Start_Longitude   : Long_Float;
   Ship_Design;
   key Alive         : Boolean;
   Training          : Long_Float;
   Fuel              : Long_Float;
   Departure         : Time;
   Arrival           : Time;
   Dest_Orbit        : Long_Float;
   Dest_Incl         : Long_Float;
   Dest_Epoch        : Time;
   Final_Destination : World;
   Current_Order     : Natural;
   Cycle_Orders      : Boolean;
   key Faction_And_World with Faction, World;
end Ship;

type Ship_Order_Class is (None, Buy, Sell, Load_Pop, Unload_Pop, Move);

record Ship_Order is
   key Ship;
   Index : Positive;
   Class : Ship_Order_Class;
   World;
   Transportable;
   Quantity : Natural;
   unique key Ship_Order with Ship, Index;
end Ship_Order;

record Cargo is
   key Ship;
   key Transportable;
end Cargo;

record Bounding_Cube is
   X1 : Long_Float;
   X2 : Long_Float;
   Y1 : Long_Float;
   Y2 : Long_Float;
   Z1 : Long_Float;
   Z2 : Long_Float;
end Bounding_Cube;

record Ship_Component : Localised, Technological, Commodity, Bounding_Cube is
   Idle_Power          : Long_Float;
   Max_Power           : Long_Float;
   Linear_Accel_Limit  : Long_Float;
   Angular_Accel_Limit : Long_Float;
   Max_Normal_Temp     : Long_Float;
   Failure_Temp        : Long_Float;
   Explosion_Power     : Long_Float;
   Throttled           : Boolean;
   Min_Throttle        : Long_Float;
   Max_Throttle        : Long_Float;   
   Operating_Heat      : Long_Float;
   Heat_Sink           : Long_Float;
end Ship_Component;

record Attachment is
   key Ship_Component;
   Name : String (16);
   X : Long_Float;
   Y : Long_Float;
   Z : Long_Float;
   key Attachment_Name with Ship_Component, Name;
end Attachment;

record Container_Component : Ship_Component is
   Capacity    : Quantity_Type;
   Liquid      : Boolean;
   Gas         : Boolean;
   Cryo        : Boolean;
end Container_Component;

record Drive_Component : Ship_Component is
   Minimum_Thrust    : Long_Float;
   Maximum_Thrust    : Long_Float;   
   Fuel              : Commodity;
   Oxidiser          : Commodity;
   Max_Fuel_Burn     : Long_Float;
   Max_Oxidiser_Burn : Long_Float;
   Fuel_Propellant   : Boolean;
   Propellent        : Commodity;
   Exhaust_Velocity  : Long_Float;
end Drive_Component;

record Power_Component : Ship_Component is
   Power_Output      : Long_Float;
end Power_Component;

record Hyperdrive_Component : Ship_Component is
   Hyperspeed : Long_Float;
end Hyperdrive_Component;

record Weapon_Component : Ship_Component is
   Effective_Range : Long_Float;
end Weapon_Component;

record Laser_Weapon_Component : Ship_Component is
   Charge : Long_Float;
end Laser_Weapon_Component;

record Kinetic_Weapon_Component : Ship_Component;
   
record Ship_Module_Design is
   key Ship_Design;
   Ship_Component;
   key Ship_Module_Design with Ship_Design, Ship_Component;
end Ship_Module_Design;

record Ship_Module is
   key Ship;
   Ship_Component;
   Crew        : Natural;
   Condition   : Long_Float;
   Tec_Level   : Long_Float;
   key Ship_Module with Ship, Ship_Component;
end Ship_Module;

end Ships;